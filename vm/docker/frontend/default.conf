# upstream django {
#     # fail_timeout=0 means we always retry an upstream even if it failed
#     # to return a good HTTP response
#     server backend:8000 fail_timeout=0;
# }

server {
  listen 8080;
  server_name _;

  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    # try_files $uri /index.html;
    try_files $uri $uri/ /index.html =404;
  }

  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   /usr/share/nginx/html;
  }

  location /api {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://backend:8000/api;
    }

  location /chaining {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://backend:8000/chaining;
    }
  
  location /admin {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://backend:8000/admin;
    }

    location /geoserver {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://geoserver:8080/geoserver;
    }
}
